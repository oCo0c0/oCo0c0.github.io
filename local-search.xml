<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>存储过程</title>
    <link href="/2023/04/03/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <url>/2023/04/03/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>存储过程介绍<br>    Oracle:<br>        1.带参存储过程语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">OR</span> REPLACE <span class="hljs-keyword">PROCEDURE</span> 存储过程名字(<br>    <span class="hljs-comment">--输入参数 IN NUMBER,</span><br>    <span class="hljs-comment">--输出参数 OUT NUMBER, --可以有多个输入参数和输出参数</span><br>                <span class="hljs-comment">--输入输出 INOUT NUMBER</span><br>) <span class="hljs-keyword">IS</span><br>    <span class="hljs-comment">--这个区间可以用来定义变量和创建游标</span><br><span class="hljs-keyword">BEGIN</span><br>    <span class="hljs-comment">--执行游标或者执行语句</span><br>     <span class="hljs-keyword">commit</span>; <span class="hljs-comment">--对上面的内容进行提交</span><br>exception<span class="hljs-operator">/</span><span class="hljs-operator">/</span>存储过程异常<br>   <span class="hljs-keyword">when</span> others <span class="hljs-keyword">then</span><br>      <span class="hljs-comment">--异常处理方法，可以是打印错误，然后进行回滚等操作，下面操作一样，看自己情况决定</span><br>      <span class="hljs-keyword">rollback</span>;<br>      dbms_output.put_line(sqlcode);<br>      dbms_output.put_line(substr(sqlerrm, <span class="hljs-number">1</span>, <span class="hljs-number">512</span>));<br><span class="hljs-keyword">END</span> 存储过程名字;<br><span class="hljs-comment">--调用存储过程</span><br>存储过程名称;<br></code></pre></td></tr></table></figure><p>​        注意：<br>​            其中参数IN表示输入参数，是参数的默认模式。<br>​            OUT表示返回值参数，类型可以使用任意Oracle中的合法类型。<br>​            OUT模式定义的参数只能在过程体内部赋值，表示该参数可以将某个值传递回调用他的过程<br>​            IN OUT表示该参数可以向该过程中传递值，也可以将某个值传出去。<br>​    2.无参存储过程语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">OR</span> REPLACE <span class="hljs-keyword">PROCEDURE</span> 存储过程名字<br><span class="hljs-keyword">IS</span><br>    <span class="hljs-comment">--这个区间可以用来定义变量和创建游标</span><br><span class="hljs-keyword">BEGIN</span><br>    <span class="hljs-comment">--执行游标或者执行语句</span><br>    <span class="hljs-keyword">commit</span>; <span class="hljs-comment">--对上面的内容进行提交</span><br>exception<span class="hljs-operator">/</span><span class="hljs-operator">/</span>存储过程异常<br>   <span class="hljs-keyword">when</span> others <span class="hljs-keyword">then</span><br>      <span class="hljs-comment">--异常处理方法，可以是打印错误，然后进行回滚等操作，下面操作一样，看自己情况决定</span><br>   <span class="hljs-keyword">rollback</span>;<br>   dbms_output.put_line(sqlcode);<br>   dbms_output.put_line(substr(sqlerrm, <span class="hljs-number">1</span>, <span class="hljs-number">512</span>));<br><span class="hljs-keyword">END</span> 存储过程名字;<br><span class="hljs-comment">--调用存储过程</span><br>存储过程名称;<br></code></pre></td></tr></table></figure><p>​    MySQL:</p><p>​        1.带参存储过程语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">delimiter 自定义结束符号<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> 存储过程名字([<span class="hljs-keyword">in</span>,<span class="hljs-keyword">out</span>,<span class="hljs-keyword">inout</span>] 参数名 数据类型)<br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-comment">--定义变量/游标</span><br>    <span class="hljs-comment">--执行游标或者执行语句</span><br><span class="hljs-keyword">END</span> 自定义结束符号<br>delimiter;<br><span class="hljs-comment">--调用存储过程</span><br><span class="hljs-keyword">call</span> 存储过程名称；<br></code></pre></td></tr></table></figure><p>​        2.无参存储过程语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">delimiter 自定义结束符号<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> 存储过程名字()<br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-comment">--定义变量/游标</span><br>    <span class="hljs-comment">--执行游标或者执行语句</span><br><span class="hljs-keyword">END</span> 自定义结束符号<br>delimiter;<br><span class="hljs-comment">--调用存储过程</span><br><span class="hljs-keyword">call</span> 存储过程名称；<br></code></pre></td></tr></table></figure><p>​    流程控制-判断语句</p><p>​        1.if语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">if 条件语句<span class="hljs-number">1</span> <span class="hljs-keyword">then</span> 执行语句<span class="hljs-number">1</span>;<br>elseif 条件语句<span class="hljs-number">1</span> <span class="hljs-keyword">then</span> 执行语句<span class="hljs-number">2</span>;<br><span class="hljs-keyword">end</span> if;<br></code></pre></td></tr></table></figure><p>​        2.case语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">case</span> 参数<br><span class="hljs-keyword">when</span> 条件<span class="hljs-number">1</span> <span class="hljs-keyword">then</span> 执行语句<span class="hljs-number">1</span>;<br><span class="hljs-keyword">when</span> 条件<span class="hljs-number">2</span> <span class="hljs-keyword">then</span> 执行语句<span class="hljs-number">2</span>;<br><span class="hljs-keyword">end</span> <span class="hljs-keyword">case</span>;<br></code></pre></td></tr></table></figure><p>​    流程控制-循环语句</p><p>​        1.while语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">标签：<br>while 循环条件<br>do 循环体;<br><span class="hljs-keyword">end</span> while 标签;<br></code></pre></td></tr></table></figure><p>​        2.repeat语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">标签：<br>repeat 循环体;<br>until 条件表达式<br><span class="hljs-keyword">end</span> repeat 标签;<br></code></pre></td></tr></table></figure><p>​        3.loop语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">标签:<br>loop 循环体;<br>if 条件表达式 <span class="hljs-keyword">then</span><br>leave 标签;<br><span class="hljs-keyword">end</span> if;<br><span class="hljs-keyword">end</span> loop;<br>loop<br>    执行语句;<br>    exit <span class="hljs-keyword">when</span> <span class="hljs-operator">&lt;</span>条件语句<span class="hljs-operator">&gt;</span> <span class="hljs-comment">--条件满足，退出循环语句;</span><br><span class="hljs-keyword">end</span> loop;<br></code></pre></td></tr></table></figure><p>​        4.for语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">for</span> 循环计数器 <span class="hljs-keyword">in</span> [REVERSE] 下限 .. 上限 loop<br>要执行的语句;<br><span class="hljs-keyword">end</span> loop [循环标签];<br>每循环一次，循环变量自动加<span class="hljs-number">1</span>；使用关键字REVERSE，循环变量自动减<span class="hljs-number">1</span>。<br><span class="hljs-keyword">in</span> REVERSE 后面的数字必须是从小到大的顺序，而且必须是整数，不能是变量或表达式,也可以使用EXIT退出循环，见loop语句。<br></code></pre></td></tr></table></figure><p>​    游标</p><p>​        声明语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">MySQL:<br><span class="hljs-keyword">declare</span> 游标名称 <span class="hljs-keyword">cursor</span> <span class="hljs-keyword">for</span> 传给游标的结果集;<br><span class="hljs-keyword">open</span> 游标名称;<br><span class="hljs-keyword">fetch</span> 游标名称 <span class="hljs-keyword">into</span> 自定义变量;<br><span class="hljs-keyword">close</span> 游标名称;<br>Oracle:<br><span class="hljs-keyword">cursor</span> 游标名称 <span class="hljs-keyword">is</span> 传给游标的结果集;<br><span class="hljs-keyword">open</span> 游标名称;<br><span class="hljs-keyword">fetch</span> 游标名称 <span class="hljs-keyword">into</span> 自定义变量;<br><span class="hljs-keyword">close</span> 游标名称;<br></code></pre></td></tr></table></figure><p>​    区别</p><table><thead><tr><th align="left">类别描述</th><th align="left">MySQL</th><th align="left">Oracle</th><th align="left">注解</th></tr></thead><tbody><tr><td align="left">创建存储过程/函数语句</td><td align="left">DROP PROCEDURE IF EXISTS <code>存储过程名称</code>;<br/>create procedure 存储过程名称()<br/>DROP FUNCTION IF EXISTS <code>函数名称</code>;<br/>CREATE  FUNCTION <code>函数名称</code>()<br/> RETURNS varchar(1000)</td><td align="left">create or replace procedure 存储过程名称（） is<br/>create or replace function 函数名称()<br/>RETURN VARCHAR2</td><td align="left">1.在创建存储过程时如果存在同名的存储过程,会删除老的存储过程. <br/>  Oracle使用create or replace.<br/>  MySQL使用先删除老的存储过程,然后再创建新的存储过程.<br/>2. Oracle存储过程可以定义在package中,也可以定义在Procedures中. 如果定义在包中,一个包中可以包含多个存储过程和方法.如果定义在Procedures中,存储过程中不可以定义多个存储过程. <br/>   MySQL存储过程中不可以定义多个存储过程.</td></tr><tr><td align="left">传参</td><td align="left">存储过程名称(参数类型  参数  参数属性)</td><td align="left">存储过程名称(参数  参数类型  参数属性)</td><td align="left">1. oracle存储过程参数可以定义为表的字段类型.<br/>   Mysql存储过程不支持这种定义方法.需要定义变量的实际类型和长度.<br/>2. oracle 参数类型in/out/inout写在参数名后面. <br/>   Mysql  参数类型in/out/inout写在参数名前面.<br/>3. oracle 参数类型in/out/inout 都必须写.<br/>   Mysql  参数类型默认in,可省略，out或inout不可省略.</td></tr><tr><td align="left">包</td><td align="left">多个存储过程或函数</td><td align="left">create or replace package/package body package name</td><td align="left">oracle可以创建包,包中可以包含多个存储过程和方法. <br/>mysql没有包，需分别创建存储过程和方法. 每个存储过程或方法都需要放在一个文件中.</td></tr><tr><td align="left">存储过程返回语句</td><td align="left">LEAVE  xx;</td><td align="left">return;</td><td align="left">oracle存储过程和方法都可以使用return退出当前过程和方法. <br/>Mysql存储过程中只能使用leave退出当前存储过程.不可以使用return. <br/>Mysql方法可以使用return退出当前方法.</td></tr><tr><td align="left">声明变量的位置</td><td align="left">begin…end内</td><td align="left">begin之前</td><td align="left"></td></tr><tr><td align="left">调用方式</td><td align="left">call 存储过程名称();</td><td align="left">存储过程名称();</td><td align="left"></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>-数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>-存储过程 -Oracle -MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/02/hello-world/"/>
    <url>/2023/04/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到我的个人博客</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
